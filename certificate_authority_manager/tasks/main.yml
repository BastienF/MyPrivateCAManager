---

- name: Install required docker modules
  pip:
    name: "{{ item }}"
    state: present
  with_items:
    - docker
    - docker-py

- name: Clear out
  file: path="{{ item }}" state=absent mode=0755
  with_items:
    - "{{ ca_manager_certificate_location }}"

- name: Generate certificat dir tree
  file: path="{{ item }}" state=directory mode=0755
  with_items:
    - "{{ ca_manager_certificate_location }}"
    - "{{ ca_manager_certificate_location }}/certs"
    - "{{ ca_manager_certificate_location }}/newcerts"
    - "{{ ca_manager_certificate_location }}/private"
    - "{{ ca_manager_certificate_location }}/csr"

- name: Make private dir private
  file: path="{{ ca_manager_certificate_location }}/private" mode="0700"

- name: Generate Openssl conf file
  template: src="openssl.cnf.j2" dest="{{ ca_manager_certificate_location }}/openssl.cnf"
  vars:
    policy: "{{ ca_manager_validation_policy }}"
  when: not ca_manager_issue_certificate|default(false)|bool

- include: docker_openssl_handler.yml
  vars:
    openssl_command: "genrsa -aes256 -out private/{{ ca_manager_key_name }} -passout pass:{{ ca_manager_key_pass }} 4096"
    command_name: "Create the certificate key"

- name: make certificate key private
  file: path="{{ ca_manager_certificate_location }}/private/{{ ca_manager_key_name }}" mode="0400"

- include: issue_root_ca.yml
  when: ca_manager_issue_root_ca|default(false)|bool

- include: issue_intermediate_ca.yml
  when: ca_manager_issue_intermediate_ca|default(false)|bool